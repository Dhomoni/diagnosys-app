/**
 * Generated by JHipster IDE plugin
 */
 
application {
	config {
		baseName diagnosis
		packageName com.dhomoni.diagnosis
		applicationType microservice
		authenticationType uaa
		uaaBaseName "uaa"
		databaseType sql
		devDatabaseType h2Disk
		prodDatabaseType postgresql
		cacheProvider hazelcast
		serviceDiscoveryType eureka
		messageBroker kafka
		searchEngine elasticsearch
		serverPort 8082
		testFrameworks [cucumber, gatling]
		clientFramework react
		buildTool maven
		languages [en, bn]
  	}
	entities *
}


entity Investigation {
	name String
}


entity InvestigationReport {
	investigation Investigation,
	description String,
	investigationReport String,
	image ImageBlob,
	investigationDate Instant,
	createDate Instant
}

relationship OneToOne {
	Report{refPrescription} to Prescription
}

entity PrescribedMedicine {
	tradeName String required
	unitQuantity String
	genericName String required
	chemicalName String required
	type MedicineType
	manufacturer String required
	hourly Integer
	afterMeal Boolean
}

entity Prescription {

	doctorRegId Long,
  	doctorFirstName String,
	doctorLastName String,
  	doctorType DoctorType,
	doctorDesignation String,
	professionalDegree String,
	medicalDepartment String,

	chamberAddress String,
	chmaberPhone String,

	patientId Long,
	patientRegId Long,
	patientFirstName String,
	patientLastName String,
	patientSex Sex,
    	patientBirthTimestamp Instant,
    	patientBloodGroup BloodGroup,
    	patientWeightInKG Double,
    	patientHeightInInch Double,
	
	patientBP String,

	diseaseDescription String,
	patientStatement String,
	genaralInstructions String,
	
	
}

entity InvestigationAdvice {
	investigation Investigation
}

relationship OneToOne {
	InvestigationAdvice{report} to InvestigationReport
}

relationship OneToOne {
	InvestigationAdvice{investigation} to Investigation
}

relationship OneToMany {
	Prescription{investigationAdvices} to InvestigationAdvice{prescription}
}

relationship OneToMany {
	Prescription{medicines} to PrescribedMedicine{prescription}
}

relationship OneToMany {
	Prescription{medicines} to PrescribedMedicine{prescription}
}

relationship OneToOne {
	Prescription{patient}
}


enum DoctorType {
	PHYSICIAN, 
	SURGEON
}

enum BloodGroup {
	A_POSITIVE,
	A_NEGATIVE,
	B_POSITIVE,
	B_NEGATIVE,
	O_POSITIVE,
	O_NEGATIVE,
	AB_POSITIVE,
	AB_NEGATIVE
}

enum Sex {
	MALE,
	FEMALE
}

enum MedicineType {
	TABLET,
	CAPSULE,
	SYRUP,
	INJECTION,
	INJECTION_IV,
	SALINE,
	ORAL_SALINE
}


dto * with mapstruct
service * with serviceClass
filter *
paginate * with infinite-scroll

dto * with mapstruct
service * with serviceClass
filter *
paginate * with infinite-scroll
